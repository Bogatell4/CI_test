name: CI with Verilator

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: &C_ubuntu ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Verilator
      run: |
        sudo apt-get update
        sudo apt-get install -y verilator g++ make
        sudo apt-get install help2man perl python3
        sudo apt-get install libfl2
        sudo apt-get install libfl-dev
        sudo apt-get install zlib1g zlib1g-dev
        sudo apt-get install ccache
        sudo apt-get install mold
        sudo apt-get install libgoogle-perftools-dev numactl
        sudo apt-get install perl-doc
        sudo apt-get install git autoconf flex bison

    - name: Cache Verilator
      uses: actions/cache@v3
      with: 
          path: /usr/bin/verilator
          key: verilator-${{ runner.os }}-${{ hashFiles('**/verilator') }}

  lint:
    needs: setup
    runs-on: *C_ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore Cached Verilator
        uses: actions/cache@v3
        with:
          path: /usr/bin/verilator
          key: verilator-${{ runner.os }}-${{ hashFiles('**/verilator') }}
          
      - name: Lint all files
        run:  verilator --lint-only device.sv adder_tb.sv multiplier_tb --timing -Wno-MULTITOP
        
  tests:
    runs-on: *C_ubuntu
    needs: [setup, lint]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Restore Cached Verilator
      uses: actions/cache@v3
      with:
        path: /usr/bin/verilator
        key: verilator-${{ runner.os }}-${{ hashFiles('**/verilator') }}
        
    - name: Adder test
      run: |
        verilator --binary device.sv adder_tb.sv --top-module adder_tb --trace --timing 
        ./obj_dir/Vadder_tb 

    - name: Multiply test
      run: |
        verilator --binary device.sv multiplier_tb.sv --top-module multiplier_tb --trace --timing
        ./obj_dir/Vmultiplier_tb 

    #- name: Upload simulation logs as artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: simulation-logs
    #    path: ./obj_dir/vltable.log  # This is where Verilator logs are generated
